<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: デザイン | uEN Laboratory]]></title>
  <link href="http://s-ueno.github.io/blog/categories/dezain/atom.xml" rel="self"/>
  <link href="http://s-ueno.github.io/"/>
  <updated>2014-11-28T17:47:05+09:00</updated>
  <id>http://s-ueno.github.io/</id>
  <author>
    <name><![CDATA[uEN]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[What is the difference between art and design?]]></title>
    <link href="http://s-ueno.github.io/blog/2014/11/11/wpf-05/"/>
    <updated>2014-11-11T01:09:00+09:00</updated>
    <id>http://s-ueno.github.io/blog/2014/11/11/wpf-05</id>
    <content type="html"><![CDATA[<p>WPFでテンプレートやスタイルに入る前に、ぜひ<a href="http://blog.btrax.com/jp/2012/03/17/what-i-learned-from-design-education/">紹介したい記事</a>があります。</p>

<p>“What is the difference between art and design?”（デザインとアートの違いとは何か？）</p>

<!-- more -->


<blockquote><p>この質問は、米国で初級デザインクラスを受ける学生達が、教授達から頻繁に投げかけられる問いの1つです。</p>

<p>デザインを習い始めた学生の多くは、デザインとアートを混同しているためです。デザインとアートの間には、決定的な違いあります。</p></blockquote>

<p>これに対する回答は</p>

<blockquote><p>”Design solves a problem, art is expression”（デザインとは問題解決であり、アートとは自己表現である。）</p></blockquote>

<p>とあります。</p>

<blockquote><p>Why?をBecauseで説明出来なければ、それは明らかにデザインではないということなのです。何となく、個人的に好きだから、感覚で、といった理由を述べた時点でそれはアート（自己表現）であり、デザイン（問題解決）ではありません。それは言い換えると、問題と向き合い、それを解決する中で生まれたモノのみがデザインであるということでもあります。</p></blockquote>

<p>昔から今に至るまで日本の職人さんたちによる ものづくりの世界では当たり前のことかもしれません。</p>

<p>たとえば、鉛筆の形状が正六角形なのはどうして？という問いに</p>

<ul>
<li>鉛筆の先は3本の指をほぼ等間隔にして持つため、断面が3の倍数角形や円以外だと、指が稜に当たってしまう。</li>
<li>正六角形の鉛筆は、同じ量の木材から多く作ることができる。円はそれに次ぐ（ただし、3の倍数に限らなければ、正方形が最も効率がいい）。</li>
<li>円形の鉛筆は、傾いた面に置くと転がってしまう。</li>
</ul>


<p>と職人さん＠wikiは答えてくれるのでしょう。</p>

<p>ユーザーの体感する利便性　+　ビジネス上のメリットが見事に融合しています。</p>

<p>現在でも車のインテリア、携帯端末、ゲームのコントローラーなど、サイズや配置をユーザー利便性+コストカットを意識してデザインを突き詰めていると思います。</p>

<p>全てに意味があり極限まで余計なものをそぎ落とし、それでいて魅力のある外観です。</p>

<p>初めて乗る車であっても、エアコンのつけ方が直観でわからなくて説明書を読むようなことはまずないでしょう。</p>

<p>UX（ユーザーが体感する利便性）などよく聞きますが、LOB開発の画面レイアウトや配置に
果たしてどれだけの人が“デザイン”を考えているでしょう？</p>

<p>たとえば、ボタンについて考えてみます。<br/>
コレです。</p>

<p><img src="http://s-ueno.github.io/images/wpf-05-01.png" alt="wpf-05-01" /></p>

<p>Windows7まで採用されているAeroスタイルが適用されています。</p>

<ul>
<li>丸みを帯びた枠線</li>
<li>色はグラデーションがかかり</li>
<li>ボタンを押下すると凹み、</li>
<li>マウスを上げるともとに戻る</li>
</ul>


<p>現実世界のボタンに似せたスタイルになっています。</p>

<p>果たしてこれに、ユーザーが体験する利便性や楽しみ、ビジネス上のメリットを説明するとなるとどうでしょう。</p>

<p>マイクロソフトは同じアプリをWindows8で実行すると、こう回答してくれます。</p>

<p><img src="http://s-ueno.github.io/images/wpf-05-02.png" alt="wpf-05-02" /></p>

<p>もっと言うと、Windowsストアアプリをダウンロードすると、もうこのようなボタンでさえ、見つけることは難しいでしょう。</p>

<p>昔はスキューモフィズムといわれる、現実世界にデザインを似せることが良いとされてきました。</p>

<p>Windows8以降はフラットデザイン、Modernスタイルなどと言われますが、これは当初ロンドンの地下鉄標識を基調として発展したとあります。</p>

<p>そこから、極限まで無駄をそぎ落とし、それでいてモダンなスタイルを表現してくれるデザインがフラットデザインになります。</p>

<p>たとえば、乗換ストアアプリを利用してみると</p>

<p><img src="http://s-ueno.github.io/images/wpf-05-03.png" alt="wpf-05-03" /></p>

<p>不要なラベル枠線やグラデーションなどありません。<br/>
とても直観的に入力できます。</p>

<p><img src="http://s-ueno.github.io/images/wpf-05-04.png" alt="wpf-05-04" /></p>

<p>このアプリに利用マニュアルは必要ないでしょう。</p>

<p>Windows8が出て、Apple、Amazon（Gitはとても素晴らしい）など大手でフラットデザインではないものはないと思います。</p>

<p>ところがどうして、最もUXを考えなければならないLOB開発の現場では、まだこれがスタンダードだとは言えないと思います。</p>

<p>デザインとアートを混同していることも多いでしょう。</p>

<p>ただし、私たちにはXAMLという強力な道具があります。<br/>
それに対して、開発者がWPFテクノロジーを意識せずとも適用できるのがスタイルでありテンプレートです。</p>

<p>こういった背景を踏まえた上で、次回以降にスタイルとテンプレート紹介したいと思います。</p>

<hr />
]]></content>
  </entry>
  
</feed>
